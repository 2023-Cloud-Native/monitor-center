services:
  fetcher:
    image: flask-web-app:1.0
    build: .
    container_name: data_fetcher
    restart: on-failure
    command: python api/data_collect.py
    volumes:
      - .:/home/nonroot
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: bash api/healthcheck.sh
      interval: 300s
      timeout: 10s
      retries: 5
  web:
    image: flask-web-app:1.0
    build: .
    container_name: flask_app
    restart: on-failure
    command: gunicorn -c apps/gunicorn_config.py apps.wsgi:app
    ports:
      - ${APP_OUT}:${APP_PORT}
    environment:
      - APP_ENV=monitor-app
      - APP_PORT=${APP_PORT}
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    volumes:
      - .:/home/nonroot
    depends_on:
      fetcher:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: curl --fail http://0.0.0.0:${APP_PORT} || exit 1
      interval: 300s 
      timeout: 10s
      retries: 5
  db:
    image: mysql:8.0.21
    container_name: mysql
    restart: unless-stopped
    ports:
      - ${MYSQL_OUT_PORT}:${MYSQL_PORT}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER_NAME: ${MYSQL_WRITE_NAME}
      MYSQL_USER_PASSWORD: ${MYSQL_WRITE_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
      - ./mysql:/docker-entrypoint-initdb.d:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - backend
    healthcheck:
      test: mysqladmin ping -h localhost -u ${MYSQL_WRITE_NAME} --password=${MYSQL_WRITE_PASSWORD} || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  backend:
    driver: bridge

volumes:
  dbdata:
    driver: local